version: "3.8"

services:
    prometheus:
        image: prom/prometheus:v3.2.1
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    "wget -q --spider http://localhost:9090/-/healthy || exit 1"
                ]
            interval: 30s
            timeout: 10s
            retries: 3
        logging:
            driver: "json-file"
            options:
                max-size: "50m"
                max-file: "3"
        volumes:
            - "prometheus_data:/prometheus"
        networks:
            - app_network
        configs:
            - source: prometheus_config
              target: /prometheus_config.yml
        secrets:
            - prometheus_users
        environment:
            - TZ=Europe/Helsinki
        deploy:
            replicas: 1
            placement:
                constraints:
                    - node.hostname == lut-project-swarm-worker-2
            restart_policy:
                condition: on-failure
            labels:
                - "traefik.enable=true"
                - "traefik.http.routers.prometheus.rule=Host(`prometheus.tiptoptip.top`)" # Remember to change this!
                - "traefik.http.routers.prometheus.entrypoints=websecure"
                - "traefik.http.routers.prometheus.tls.certresolver=myresolver"
                - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
                - "traefik.http.routers.prometheus.middlewares=prometheus-auth"
                - "traefik.http.middlewares.prometheus-auth.basicauth.usersfile=/run/secrets/prometheus_users"
                - "traefik.docker.network=app_network"
        command:
            - "--config.file=/prometheus_config.yml"
            - "--storage.tsdb.path=/prometheus"
            - "--storage.tsdb.retention.time=15d"
            - "--web.enable-lifecycle"

    alert-manager:
        image: prom/alertmanager:v0.28.1
        logging:
            driver: "json-file"
            options:
                max-size: "50m"
                max-file: "3"
        networks:
            - app_network
        volumes:
            - "alertmanager_data:/alertmanager"
        environment:
            - TZ=Europe/Helsinki
        configs:
            - source: alertmanager_config
              target: /alertmanager_config.yml
        deploy:
            replicas: 1
            placement:
                constraints:
                    - node.hostname == lut-project-swarm-worker-2
            restart_policy:
                condition: on-failure
        command:
            - "--config.file=/alertmanager_config.yml"
            - "--storage.path=/alertmanager"

    grafana:
        image: grafana/grafana-oss:11.3.4
        logging:
            driver: "json-file"
            options:
                max-size: "50m"
                max-file: "3"
        networks:
            - app_network
        volumes:
            - "grafana_data:/var/lib/grafana"
            - "grafana_provisioning:/etc/grafana/provisioning"
        environment:
            - GF_SECURITY_ADMIN_PASSWORD__FILE=/run/secrets/grafana_admin_password_1
            - GF_SERVER_ROOT_URL=https://grafana.tiptoptip.top
            - TZ=Europe/Helsinki
        secrets:
            - grafana_admin_password_1
        deploy:
            replicas: 1
            placement:
                constraints:
                    - node.hostname == lut-project-swarm-worker-2
            restart_policy:
                condition: on-failure
            labels:
                - "traefik.enable=true"
                - "traefik.http.routers.grafana.rule=Host(`grafana.tiptoptip.top`)"
                - "traefik.http.routers.grafana.entrypoints=websecure"
                - "traefik.http.routers.grafana.tls.certresolver=myresolver"
                - "traefik.http.services.grafana.loadbalancer.server.port=3000"
                - "traefik.docker.network=app_network"

    promtail:
        image: grafana/promtail:3.4.2
        logging:
            driver: "json-file"
            options:
                max-size: "50m"
                max-file: "3"
        networks:
            - app_network
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - /var/log:/var/log:ro
            - /var/lib/docker/containers:/var/lib/docker/containers:ro
        configs:
            - source: promtail_config
              target: /etc/promtail/config.yml
        command: -config.file=/etc/promtail/config.yml
        deploy:
            mode: global
            resources:
                limits:
                    memory: 128M
                reservations:
                    memory: 64M

    loki:
        image: grafana/loki:3.4.2
        logging:
            driver: "json-file"
            options:
                max-size: "50m"
                max-file: "3"
        networks:
            - app_network
        configs:
            - source: loki_config
              target: /loki_config.yaml
        volumes:
            - "loki_data:/loki"
        command: -config.file=/loki_config.yaml
        deploy:
            replicas: 1
            placement:
                constraints:
                    - node.hostname == lut-project-swarm-worker-2
            restart_policy:
                condition: on-failure
            labels:
                - "traefik.enable=true"
                - "traefik.http.routers.loki.rule=Host(`loki.tiptoptip.top`)"
                - "traefik.http.routers.loki.entrypoints=websecure"
                - "traefik.http.routers.loki.tls.certresolver=myresolver"
                - "traefik.http.services.loki.loadbalancer.server.port=3100"
                - "traefik.http.routers.loki.middlewares=loki-auth"
                - "traefik.http.middlewares.loki-auth.basicauth.usersfile=/run/secrets/prometheus_users"
                - "traefik.docker.network=app_network"

volumes:
    prometheus_data:
        external: true
    alertmanager_data:
        external: true
    grafana_data:
        external: true
    grafana_provisioning:
        external: true
    loki_data:
        external: true

networks:
    app_network:
        external: true

configs:
    prometheus_config:
        external: true
    alertmanager_config:
        external: true
    loki_config:
        external: true
    promtail_config:
        external: true

secrets:
    prometheus_users:
        external: true
    grafana_admin_password_1:
        external: true